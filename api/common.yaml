openapi: 3.0.2
info:
  title: Team One API
  contact:
    name: Team One
    email: nifigator@gmail.com
  version: '1.0.0'

servers:
  - url: /api/v1.0

paths:
  /customers:
    get:
      summary: Get customer list
      operationId: routes.customers.get_customers
      tags:
        - Customers
      responses:
        '200':
          description: Customers data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customers"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /customers/{customer_id}:
    get:
      summary: Get customer information
      operationId: routes.customers.get_customer
      tags:
        - Customers
      parameters:
      - name: customer_id
        description: Customer unique identifier
        in: path
        required: true
        example: 12
        schema:
          type: integer
      responses:
        '200':
          description: Customer data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

#   /contractor/{contractor_id}:
#     get:
#       summary: Get contractor information
#       operationId: routes.contractors.get_contractor
#       tags:
#         - Contractors
#       parameters:
#       - name: contractor_id
#         description: Contractor unique identifier
#         in: path
#         required: true
#         example: 10
#         schema:
#           type: integer
#       responses:
#         '200':
#           description: Contractor data
#           content:
#             application/json:
#               schema:
#                 $ref: "#/components/schemas/Contractor"
#         default:
#           description: Unexpected error
#           content:
#             application/json:
#               schema:
#                 $ref: "#/components/schemas/Error"

  /customers/{customer_id}/issues:
    post:
      summary: Create issue
      operationId: routes.customers.create_issue
      tags:
        - Customers
      parameters:
      - name: customer_id
        description: Customer unique identifier
        in: path
        required: true
        example: 15
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerIssue"
      responses:
        '201':
          description: Issue created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerIssue"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    get:
      summary: Get customer issues
      operationId: routes.customers.get_issues
      tags:
        - Customers
      parameters:
       - name: customer_id
         description: Customer unique identifier
         in: path
         required: true
         example: 15
         schema:
          type: integer
      responses:
        '200':
           description: Customer issues list
           content:
             application/json:
               schema:
                 $ref: "#/components/schemas/CustomerIssues"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /management/{management_id}/issues:
    get:
      summary: Get customer issues by management
      operationId: routes.management.get_issues_by_mgmt
      tags:
        - Management
      parameters:
       - name: management_id
         description: Management unique identifier
         in: path
         required: true
         example: 15
         schema:
          type: integer
      responses:
        '200':
           description: Customer issues list
           content:
             application/json:
               schema:
                 $ref: "#/components/schemas/CustomerIssues"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /contractor/{contractor_id}/issues:
    get:
      summary: Get contractor issues
      operationId: routes.contractors.get_issues
      tags:
        - Contractor
      parameters:
       - name: contractor_id
         description: Contractor unique identifier
         in: path
         required: true
         example: 15
         schema:
          type: integer
      responses:
        '200':
           description: Contractor issues list
           content:
             application/json:
               schema:
                 $ref: "#/components/schemas/CustomerIssues"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /customers/{customer_id}/issues/{issue_id}:
    get:
      summary: Get customer issue
      operationId: routes.customers.get_issue
      tags:
        - Customers
      parameters:
        - name: customer_id
          description: Customer unique identifier
          in: path
          required: true
          example: 15
          schema:
            type: integer
        - name: issue_id
          description: Issue unique identifier
          in: path
          required: true
          example: 55
          schema:
            type: integer
      responses:
        '200':
          description: Customer issue data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerIssue"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update customer issue
      operationId: routes.customers.update_issue
      tags:
        - Customers
      parameters:
        - name: customer_id
          description: Customer unique identifier
          in: path
          required: true
          example: 15
          schema:
            type: integer
        - name: issue_id
          description: Issue unique identifier
          in: path
          required: true
          example: 55
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerIssue"
      responses:
        '200':
          description: Updated customer issue data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerIssue"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

#   /customers/categories:
#     get:
#       summary: Get categoties list
#       operationId: routes.categories.get_categories
#       tags:
#         - Customers
#         - Categories
#       responses:
#         '200':
#            description: Categories list
#            content:
#              application/json:
#                schema:
#                  $ref: "#/components/schemas/Categories"
#         default:
#           description: Unexpected error
#           content:
#             application/json:
#               schema:
#                 $ref: "#/components/schemas/Error"
# 
#   /customers/categories/{category_id}:
#     get:
#       summary: Get category
#       operationId: routes.categories.get_category
#       tags:
#         - Customers
#         - Categories
#       parameters:
#         - name: category_id
#           description: Category unique identifier
#           in: path
#           required: true
#           example: 15
#           schema:
#             type: integer
#       responses:
#         '200':
#           description: Category data
#           content:
#             application/json:
#               schema:
#                 $ref: "#/components/schemas/Category"
#         default:
#           description: Unexpected error
#           content:
#             application/json:
#               schema:
#                 $ref: "#/components/schemas/Error"

  /customers/issue_history/{issue_id}:
    get:
      summary: Get customer issue
      operationId: routes.customers.get_issue_history
      tags:
        - Customers
      parameters:
        - name: issue_id
          description: Issue unique identifier
          in: path
          required: true
          example: 55
          schema:
            type: integer
      responses:
        '200':
          description: Customer issue history data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerIssueHistory"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"


  /issues:
#     post:
#       summary: Create issue
#       operationId: app.dummy
#       tags:
#         - Management
#       requestBody:
#         required: true
#         content:
#           application/json:
#             schema:
#               $ref: "#/components/schemas/CustomerIssue"
#       responses:
#         '201':
#           description: Issue created
#           content:
#             application/json:
#               schema:
#                 $ref: "#/components/schemas/CustomerIssue"
#         default:
#           description: Unexpected error
#           content:
#             application/json:
#               schema:
#                 $ref: "#/components/schemas/Error"
# 
    get:
      summary: Get customer issues
      operationId: routes.management.get_issues
      tags:
        - Management
      parameters:
      - name: offset
        description: The starting position in the issue list.
        in: query
        required: false
        schema:
          type: integer
      - name: limit
        description: The number of issues output.
        in: query
        required: false
        schema:
          type: integer
      - name: sort
        description: Sort fields of issues output.
        in: query
        required: false
        schema:
          type: string
      - name: fields
        description: Filter fields of issues output.
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
           description: Customer issues list
           content:
             application/json:
               schema:
                 $ref: "#/components/schemas/CustomerIssues"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /admins/categoties:
    post:
      summary: Create category
      operationId: routes.categories.create_category
      tags:
        - Admin
        - Categories
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
      responses:
        '201':
          description: Category created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      summary: Get categoties list
      operationId: routes.categories.get_categories
      tags:
        - Admin
        - Categories
      responses:
        '200':
           description: Categories list
           content:
             application/json:
               schema:
                 $ref: "#/components/schemas/Categories"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /admins/categories/{category_id}:
    get:
      summary: Get category
      operationId: routes.categories.get_category
      tags:
        - Admin
        - Categories
      parameters:
        - name: category_id
          description: Category unique identifier
          in: path
          required: true
          example: 15
          schema:
            type: integer
      responses:
        '200':
          description: Category data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update category
      operationId: routes.categories.update_category
      tags:
        - Admin
        - Categories
      parameters:
        - name: category_id
          description: Category unique identifier
          in: path
          required: true
          example: 15
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
      responses:
        '200':
          description: Updated category data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete category
      operationId: routes.categories.delete_category
      tags:
        - Admin
        - Categories
      parameters:
      - name: category_id
        description: Category unique identifier
        in: path
        required: true
        example: 12
        schema:
          type: integer
      responses:
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /admins/statuses:
    post:
      summary: Create status
      operationId: routes.statuses.create_status
      tags:
        - Admin
        - Statuses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Status"
      responses:
        '201':
          description: Status created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      summary: Get statuses list
      operationId: routes.statuses.get_statuses
      tags:
        - Admin
        - Statuses
      responses:
        '200':
           description: Status list
           content:
             application/json:
               schema:
                 $ref: "#/components/schemas/Statuses"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /admins/statuses/{status_id}:
    get:
      summary: Get status
      operationId: routes.statuses.get_status
      tags:
        - Admin
        - Statuses
      parameters:
        - name: status_id
          description: Status unique identifier
          in: path
          required: true
          example: 15
          schema:
            type: integer
      responses:
        '200':
          description: Status data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update status
      operationId: routes.statuses.update_status
      tags:
        - Admin
        - Statuses
      parameters:
        - name: status_id
          description: Status unique identifier
          in: path
          required: true
          example: 15
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Status"
      responses:
        '200':
          description: Updated status data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete status
      operationId: routes.statuses.delete_status
      tags:
        - Admin
        - Statuses
      parameters:
      - name: status_id
        description: Status unique identifier
        in: path
        required: true
        example: 12
        schema:
          type: integer
      responses:
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /admins/issues:
#     post:
#       summary: Create issue
#       operationId: routes.customers.create_issue
#       tags:
#         - Customers
#       parameters:
#       - name: customer_id
#         description: Customer unique identifier
#         in: path
#         required: true
#         example: 15
#         schema:
#           type: integer
#       requestBody:
#         required: true
#         content:
#           application/json:
#             schema:
#               $ref: "#/components/schemas/CustomerIssue"
#       responses:
#         '201':
#           description: Issue created
#           content:
#             application/json:
#               schema:
#                 $ref: "#/components/schemas/CustomerIssue"
#         default:
#           description: Unexpected error
#           content:
#             application/json:
#               schema:
#                 $ref: "#/components/schemas/Error"
# 
    get:
      summary: Get customers issues
      operationId: routes.customers.get_all_issues
      tags:
        - Admin
      responses:
        '200':
           description: Customers issues list
           content:
             application/json:
               schema:
                 $ref: "#/components/schemas/CustomerIssues"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /events:
    post:
      summary: Create event
      operationId: routes.events.create_event
      tags:
        - Events
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Event"
      responses:
        '201':
          description: Event created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      summary: Get events list
      operationId: routes.events.get_events
      tags:
        - Events
      responses:
        '200':
           description: Events list
           content:
             application/json:
               schema:
                 $ref: "#/components/schemas/Events"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /events/{event_id}:
    get:
      summary: Get event
      operationId: routes.events.get_event
      tags:
        - Events
      parameters:
        - name: event_id
          description: Event unique identifier
          in: path
          required: true
          example: 15
          schema:
            type: integer
      responses:
        '200':
          description: Event data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update event
      operationId: routes.events.update_event
      tags:
        - Events
      parameters:
        - name: event_id
          description: Event unique identifier
          in: path
          required: true
          example: 15
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Event"
      responses:
        '200':
          description: Updated event data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete event
      operationId: routes.events.delete_event
      tags:
        - Events
      parameters:
      - name: event_id
        description: Event unique identifier
        in: path
        required: true
        example: 12
        schema:
          type: integer
      responses:
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /subscribers:
    post:
      summary: Create subscriber
      operationId: routes.events.create_subscriber
      tags:
        - Subscribers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Subscriber"
      responses:
        '201':
          description: Subscriber created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscriber"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      summary: Get subscribers list
      operationId: routes.events.get_subscribers
      tags:
        - Subscribers
      responses:
        '200':
           description: Subsciber list
           content:
             application/json:
               schema:
                 $ref: "#/components/schemas/Subscribers"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /subscribers/{subscriber_id}:
    get:
      summary: Get subscriber
      operationId: routes.events.get_subscriber
      tags:
        - Subscribers
      parameters:
        - name: subscriber_id
          description: Subscriber unique identifier
          in: path
          required: true
          example: 15
          schema:
            type: integer
      responses:
        '200':
          description: Subscriber data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscriber"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update subscriber
      operationId: routes.events.update_subscriber
      tags:
        - Subscribers
      parameters:
        - name: subscriber_id
          description: Subscriber unique identifier
          in: path
          required: true
          example: 15
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Subscriber"
      responses:
        '200':
          description: Updated subscriber data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscriber"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete subscriber
      operationId: routes.events.delete_subscriber
      tags:
        - Subscribers
      parameters:
      - name: subscriber_id
        description: Subscriber unique identifier
        in: path
        required: true
        example: 12
        schema:
          type: integer
      responses:
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /handlers:
    post:
      summary: Create handler
      operationId: routes.events.create_handler
      tags:
        - Handlers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Handler"
      responses:
        '201':
          description: Handler created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Handler"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      summary: Get handlers list
      operationId: routes.events.get_handlers
      tags:
        - Handlers
      responses:
        '200':
           description: Handler list
           content:
             application/json:
               schema:
                 $ref: "#/components/schemas/Handlers"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /handlers/{handler_id}:
    get:
      summary: Get handler
      operationId: routes.events.get_handler
      tags:
        - Handlers
      parameters:
        - name: handler_id
          description: Handler unique identifier
          in: path
          required: true
          example: 15
          schema:
            type: integer
      responses:
        '200':
          description: Handler data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Handler"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update handler
      operationId: routes.events.update_handler
      tags:
        - Handlers
      parameters:
        - name: handler_id
          description: Hanlder unique identifier
          in: path
          required: true
          example: 15
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Handler"
      responses:
        '200':
          description: Updated handler data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Handler"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete handler
      operationId: routes.events.delete_handler
      tags:
        - Handlers
      parameters:
      - name: handler_id
        description: Handler unique identifier
        in: path
        required: true
        example: 12
        schema:
          type: integer
      responses:
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"



components:
  schemas:
    Customer:
      properties:
        name:
          type: string
          description: Customer name
          example: Ivan
        middlename:
          type: string
          description: Customer name
          example: Ivanovich
        surname:
          type: string
          description: Customer name
          example: Ivanov
        street:
          type: string
          description: Custoner street
          example: Markovskogo
        house:
          type: string
          description: Customer hosuse number
          example: 12a
        flat:
          type: integer
          description: Customer flat number
          example: 99
        phone:
          type: string
          description: Customer phone number
          example: +79991234567
        email:
          type: string
          description: Customer email
          example: user@mail.com

    Customers:
      type: array
      items:
        allOf:
        - type: object
          properties:
            id:
              type: integer
              description: Customer ID
              example: 1123
        - $ref: "#/components/schemas/Customer"

#     Contractor:
#       properties:
#         name:
#           type: string
#           description: Contractor name
#           example: JSC Smart
#         specializations:
#           type: array
#           items:
#             type: string
#             description: Specialization
#         rating:
#           type: number
#           description: Contractor rating

    CustomerIssue:
      properties:
        status_id:
          type: integer
          description: Issue ID Status
        category_id:
          type: integer
          description: Issue ID category
        customer_id:
          type: integer
          description: Customer ID
        body:
          type: string
          description: Issue text
        # create_data:
        #   crtype: string
        #   crformat: date-time
        #   crdescription: Issue create date and time
        rating:
          type: integer
          description: Issue rating
        contractor:
          type: string
          description: Contractor name
        contractor_id:
          type: integer
          description: Contractor ID
        management_id:
          type: integer
          description: Management company ID

    CustomerIssues:
      type: array
      items:
        allOf:
        - type: object
          properties:
            id:
              type: integer
              description: Issue ID
              example: 1123
        - $ref: "#/components/schemas/CustomerIssue"

    Category:
      properties:
        # category_id:
        #   type: integer
        #   description: Category ID
        name:
          type: string
          description: Category name
        image_path:
          type: string
          description: Image path
        description:
          type: string
          description: Description

    Categories:
      type: array
      items:
        allOf:
        - type: object
          properties:
            id:
              type: integer
              description: Category ID
              example: 123
        - $ref: "#/components/schemas/Category"

    Status:
      properties:
        # category_id:
        #   type: integer
        #   description: Category ID
        name:
          type: string
          description: Category name
        description:
          type: string
          description: Description

    Statuses:
      type: array
      items:
        allOf:
        - type: object
          properties:
            id:
              type: integer
              description: Status ID
              example: 123
        - $ref: "#/components/schemas/Status"

    CustomerIssueHistory:
      properties:
        id:
          type: integer
          description: History isssue ID
        status_id:
          type: integer
          description: Issue ID Status
        customer_id:
          type: integer
          description: Customer ID
        reason:
          type: string
          description: Reason text
        note:
          type: integer
          description: Note rating

    Event:
      properties:
        dt:
          type: string
          description: Date and time
        event_type:
          type: string
          description: Event type
        payload:
          type: string
          description: Payload
        state:
          type: integer
          description: State

    Events:
      type: array
      items:
        allOf:
        - type: object
          properties:
            id:
              type: integer
              description: Event ID
              example: 123
        - $ref: "#/components/schemas/Event"

    Subscriber:
      properties:
        event_type:
          type: string
          description: Event type
        handler_id:
          type: integer
          description: Handler ID

    Subscribers:
      type: array
      items:
        allOf:
        - type: object
          properties:
            id:
              type: integer
              description: Subscriber ID
              example: 123
        - $ref: "#/components/schemas/Subscriber"

    Handler:
      properties:
        about:
          type: string
          description: About
        cmd:
          type: string
          description: cmd

    Handlers:
      type: array
      items:
        allOf:
        - type: object
          properties:
            id:
              type: integer
              description: Handler ID
              example: 123
        - $ref: "#/components/schemas/Handler"


    Error:
      required:
        # - code
        - message
      properties:
        code: 
          type: integer
          format: int32
        message:
          type: string


